package <%= @package %>.business.services.impl;

import java.util.List;
import java.util.stream.Collectors;
import <%= @package %>.business.dtos.<%= @name.capitalize %>DTO;
import <%= @package %>.business.services.<%= @name.capitalize %>Service;
import <%= @package %>.business.exceptions.EntityNotFoundException;
import <%= @package %>.persistence.entities.<%= @name.capitalize %>;
import <%= @package %>.persistence.repositories.<%= @name.capitalize %>Repository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
public class <%= @name.capitalize %>ServiceImpl implements <%= @name.capitalize %>Service {

    @Autowired
    private <%= @name.capitalize %>Repository repository;

    @Override
    public List<<%= @name.capitalize %>DTO> trovaTutti() {
        return repository.findAll().stream()
                .map(entity -> new <%= @name.capitalize %>DTO(entity))
                .collect(Collectors.toList());
    }

    @Override
    public <%= @name.capitalize %>DTO trova(Long id) {
        return new <%= @name.capitalize %>DTO(this.findOneSafe(id));
    }

    @Override
    public <%= @name.capitalize %>DTO salva(<%= @name.capitalize %>DTO model) {
        return new <%= @name.capitalize %>DTO(repository.save(model.convert()));
    }

    @Override
    @Transactional
    public Long cancella(Long id) {
        return repository.deleteById(id);
    }

    private <%= @name.capitalize %> findOneSafe(Long id) {
        <%= @name.capitalize %> entity = repository.findOne(id);
        if (entity == null) {
            throw new EntityNotFoundException(<%= @name.capitalize %>.class.toString(),id);
        } else {
            return entity;
        }
    }
}
