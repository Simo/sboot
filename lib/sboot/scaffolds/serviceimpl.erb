package <%= @package %>.business.services.impl;

import <%= @package %>.business.dtos.<%= @name.capitalize %>DTO;
import <%= @package %>.business.services.<%= @name.capitalize %>Service;
import <%= @package %>.business.exceptions.EntityNotFoundException;
import <%= @package %>.persistence.entities.<%= @name.capitalize %>;
import <%= @package %>.persistence.repositories.<%= @name.capitalize %>Repository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.List;

@Service
public class <%= @name.capitalize %>ServiceImpl implements <%= @name.capitalize %>Service {

    private <%= @name.capitalize %>Repository repository;

		@Autowired
		public <%= @name.capitalize %>ServiceImpl(<%= @name.capitalize %>Repository repo){
			this.repository = repo;
		}

    @Override
    public List<<%= @name.capitalize %>DTO> trovaTutti() {
        List<<%= @name.capitalize %>> source = repository.findAll();
        List<<%= @name.capitalize %>DTO> dtos = new ArrayList<<%= @name.capitalize %>DTO>();
        for (<%= @name.capitalize %> entity : source){
            <%= @name.capitalize %>DTO dto = new <%= @name.capitalize %>DTO(entity);
            dtos.add(dto);
        }
        return dtos;
    }

    @Override
    public <%= @name.capitalize %>DTO trova(Long id) {
        return new <%= @name.capitalize %>DTO(this.findOneSafe(id));
    }

    @Override
    public <%= @name.capitalize %>DTO salva(<%= @name.capitalize %>DTO model) {
        return new <%= @name.capitalize %>DTO(repository.save(model.convert()));
    }

    @Override
    @Transactional
    public Long cancella(Long id) {
        return repository.deleteById(id);
    }

    private <%= @name.capitalize %> findOneSafe(Long id) {
        <%= @name.capitalize %> entity = repository.findOne(id);
        if (entity == null) {
            throw new EntityNotFoundException(<%= @name.capitalize %>.class.toString(),id);
        } else {
            return entity;
        }
    }
}
