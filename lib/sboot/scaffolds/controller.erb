package <%= @package %>.web.controllers;

import <%= @package %>.business.dtos.<%= @entity.name.capitalize %>DTO;
import <%= @package %>.business.services.<%= @entity.name.capitalize %>Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;

import java.util.List;

@Controller
public class <%= @entity.name.capitalize %>Controller {

    @Autowired
    private <%= @entity.name.capitalize %>Service service;

    @RequestMapping(value = "/<%= @entity.collection.downcase %>", method = RequestMethod.GET, produces = ("text/html"))
    public ModelAndView index(){
        ModelAndView mav = new ModelAndView("<%= @entity.name.downcase %>/index");
				<% unless @entity.collection_defined? -%>
				mav.addObject("<%= @entity.name.downcase %>Lista",service.trovaTutti());
				<% else -%>
				mav.addObject("<%= @entity.collection.downcase %>",service.trovaTutti());
				<% end -%>
				return mav;
    }

		@RequestMapping(value = "/<%= @entity.collection.downcase %>/{id}", method = RequestMethod.GET, produces = ("text/html"))
    public ModelAndView dettaglio(@PathVariable Long id){
        ModelAndView mav = new ModelAndView("<%= @entity.name.downcase %>/dettaglio");
				mav.addObject("<%= @entity.name.downcase %>",service.trova(id));
				return mav;
    }

		@RequestMapping(value = "/<%= @entity.collection.downcase %>/new", method = RequestMethod.GET, produces = ("text/html"))
    public ModelAndView nuovo(){
        ModelAndView mav = new ModelAndView("<%= @entity.name.downcase %>/nuovo");
				mav.addObject("<%= @entity.name.downcase %>",new <%= @entity.name.capitalize %>DTO());
				return mav;
    }

		@RequestMapping(value = "/<%= @entity.collection.downcase %>/{id}/edit", method = RequestMethod.GET, produces = ("text/html"))
    public ModelAndView modifica(@PathVariable Long id){
        ModelAndView mav = new ModelAndView("<%= @entity.name.downcase %>/modifica");
				mav.addObject("<%= @entity.name.downcase %>",service.trova(id));
				return mav;
    }

    @RequestMapping(value = "/<%= @entity.collection.downcase %>",method = RequestMethod.POST)
    public String salva(@ModelAttribute <%= @entity.name.capitalize %>DTO model){
				<%= @entity.name.capitalize %>DTO newModel = service.salva(model);
        return "redirect:/<%= @entity.collection.downcase %>/"+newModel.getId();
    }

		@RequestMapping(value = "/<%= @entity.collection.downcase %>/{id}",method = {RequestMethod.POST, RequestMethod.PUT})
    public String salva(@PathVariable Long id, @ModelAttribute <%= @entity.name.capitalize %>DTO model){
				<%= @entity.name.capitalize %>DTO newModel = service.salva(model);
        return "redirect:/<%= @entity.collection.downcase %>/"+newModel.getId();
    }

    @RequestMapping(value = "/<%= @entity.name.downcase %>/{id}",method = RequestMethod.DELETE)
    public String deleteRest(@PathVariable Long id){
				Long idDeleted = service.cancella(id);
				return "redirect:/<%= @entity.collection.downcase %>";
    }

		@RequestMapping(value = "/<%= @entity.name.downcase %>/{id}/delete",method = RequestMethod.GET)
    public String delete(@PathVariable Long id){
				Long idDeleted = service.cancella(id);
				return "redirect:/<%= @entity.collection.downcase %>";
    }

		@RequestMapping(value = "/<%= @entity.collection.downcase %>", method = RequestMethod.GET, produces = ("application/json"))
		@ResponseBody
    public List<<%= @entity.name.capitalize %>DTO> indexJson(){
        return service.trovaTutti();
    }

		@RequestMapping(value = "/<%= @entity.collection.downcase %>/{id}", method = RequestMethod.GET, produces = ("application/json"))
		@ResponseBody
    public <%= @entity.name.capitalize %>DTO dettaglioJson(@PathVariable Long id){
				return service.trova(id);
    }

}
