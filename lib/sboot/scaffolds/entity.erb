package <%= @package %>.persistence.entities;

import javax.persistence.*;
<% if @entity.primary_key.is_uuid? -%>import java.util.UUID;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;<% end -%>
<% if @entity.datetype -%>import java.util.Date;<% end -%>

@Entity
@Table(name = "<%= @entity.name.upcase %>")
public class <%= @entity.name.split('_').collect(&:capitalize).join %> {

  @Id
<% if @entity.primary_key.is_uuid? -%>
  @Type(type="uuid-binary")
  @GeneratedValue(generator="myUUID")
  @GenericGenerator(name="myUUID", strategy="uuid2")
<% end -%>
<% unless @entity.primary_key.is_uuid? -%>
  //@GeneratedValue(strategy= GenerationType.AUTO, generator="<%= @entity.name.downcase %>_seq_gen")
  //@SequenceGenerator(name="<%= @entity.name.downcase %>_seq_gen", sequenceName="SEQ_T_<%= @entity.name.upcase %>_ID")
<% end -%>
  @Column(name = "<%= @entity.primary_key[:name].upcase %>")

  private <%= @entity.primary_key[:type] %> <%= @entity.primary_key[:name] %>;
  <% @entity.properties.each do |property| -%>
  <% unless property[:constraint] == 'pk' -%>
  @Column(name = "<%= property[:name].upcase %>")
  private <%= property.type %> <%= property.camel_rather_dash firstLetter: 'downcase'  %>;
  <% end -%>
  <% end -%>

  <% @entity.properties.each do |property| -%>
  public <%= property.type %> get<%= property.camel_rather_dash firstLetter: 'upcase'  %>() {
    return <%= property.camel_rather_dash firstLetter: 'downcase'  %>;
  }

  public void set<%= property.camel_rather_dash firstLetter: 'upcase'  %>(<%= property.type %> <%= property.camel_rather_dash firstLetter: 'downcase'  %>) {
  this.<%= property.camel_rather_dash firstLetter: 'downcase'  %> = <%= property.camel_rather_dash firstLetter: 'downcase'  %>;
  }
  <% end -%>
}
